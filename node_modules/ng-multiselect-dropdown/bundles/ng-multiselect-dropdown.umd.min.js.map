{
  "version": 3,
  "file": "ng-multiselect-dropdown.umd.min.js",
  "sources": [
    "ng://ng-multiselect-dropdown/out/multiselect.model.ts",
    "ng://ng-multiselect-dropdown/out/multiselect.component.ts",
    "ng://ng-multiselect-dropdown/out/click-outside.directive.ts",
    "ng://ng-multiselect-dropdown/out/list-filter.pipe.ts",
    "ng://ng-multiselect-dropdown/out/ng-multiselect-dropdown.module.ts"
  ],
  "sourcesContent": [
    "export class ListItem {\r\n  id: String;\r\n  text: String;\r\n\r\n  public constructor(source: any) {\r\n    if (typeof source === 'string') {\r\n      this.id = this.text = source;\r\n    }\r\n    if (typeof source === 'object') {\r\n      this.id = source.id;\r\n      this.text = source.text;\r\n    }\r\n  }\r\n}\r\nexport class MyException {\r\n  status: number;\r\n  body: any;\r\n  constructor(status: number, body: any) {\r\n    this.status = status;\r\n    this.body = body;\r\n  }\r\n}\r\n",
    "import {\r\n  Component,\r\n  NgModule,\r\n  HostListener,\r\n  ViewEncapsulation,\r\n  forwardRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  AfterViewInit,\r\n  Pipe,\r\n  PipeTransform,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ListItem, MyException } from './multiselect.model';\r\nimport { ClickOutsideDirective } from './click-outside.directive';\r\nimport { ListFilterPipe } from './list-filter.pipe';\r\n\r\nexport interface DropdownSettings {\r\n  singleSelection: Boolean;\r\n  idField?: string;\r\n  textField?: string;\r\n  enableCheckAll: Boolean;\r\n  selectAllText?: String;\r\n  unSelectAllText?: String;\r\n  allowSearchFilter?: Boolean;\r\n  clearSearchFilter?: Boolean;\r\n  maxHeight?: Number;\r\n  itemsShowLimit?: Number;\r\n  limitSelection?: Number;\r\n  searchPlaceholderText?: String;\r\n  closeDropDownOnSelection?: Boolean;\r\n}\r\n\r\nexport const DROPDOWN_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MultiSelectComponent),\r\n  multi: true\r\n};\r\nconst noop = () => {};\r\n\r\n@Component({\r\n  selector: 'ng-multiselect-dropdown',\r\n  template: `<div tabindex=\"=0\" (blur)=\"onTouched()\" class=\"multiselect-dropdown\" (clickOutside)=\"closeDropdown()\">\r\n  <div [class.disabled]=\"disabled\">\r\n    <span tabindex=\"-1\" class=\"dropdown-btn\" (click)=\"toggleDropdown($event)\">\r\n      <span *ngIf=\"selectedItems.length == 0\">{{_placeholder}}</span>\r\n      <span class=\"selected-item\" *ngFor=\"let item of selectedItems;trackBy: trackByFn;let k = index\" [hidden]=\"k > _settings.itemsShowLimit-1\">\r\n        {{item.text}}\r\n        <a style=\"padding-top:2px;padding-left:2px;color:white\" (click)=\"onItemClick($event,item)\">x</a>\r\n      </span>\r\n      <span style=\"float:right !important;padding-right:4px\">\r\n        <span style=\"padding-right: 6px;\" *ngIf=\"itemShowRemaining()>0\">+{{itemShowRemaining()}}</span>\r\n        <span [ngClass]=\"isDropdownOpen ? 'dropdown-up' : 'dropdown-down'\"></span>\r\n      </span>\r\n    </span>\r\n  </div>\r\n\r\n  <div class=\"dropdown-list\" [hidden]=\"!isDropdownOpen\">\r\n    <ul *ngIf=\"!_settings.limitSelection\">\r\n      <li (click)=\"toggleSelectAll()\" *ngIf=\"!_settings.singleSelection && _settings.enableCheckAll && _data.length > 0\" class=\"multiselect-item-checkbox\"\r\n        style=\"border-bottom: 1px solid #ccc;padding:10px\">\r\n        <input type=\"checkbox\" [checked]=\"isAllItemsSelected()\" [disabled]=\"disabled || isLimitSelectionReached()\" />\r\n        <div>{{!isAllItemsSelected() ? _settings.selectAllText : _settings.unSelectAllText}}</div>\r\n      </li>\r\n      <li class=\"filter-textbox\" *ngIf=\"_settings.allowSearchFilter\">\r\n        <input type=\"text\" [readOnly]=\"disabled\" [placeholder]=\"_settings.searchPlaceholderText\" [(ngModel)]=\"filter.text\">\r\n      </li>\r\n    </ul>\r\n\r\n    <ul [style.maxHeight]=\"_settings.maxHeight+'px'\">\r\n      <li *ngFor=\"let item of _data | ng2ListFilter:filter; let i = index;\" (click)=\"onItemClick($event,item)\" class=\"multiselect-item-checkbox\">\r\n        <input type=\"checkbox\" [checked]=\"isSelected(item)\" [disabled]=\"disabled || (isLimitSelectionReached() && !isSelected(item))\"\r\n        />\r\n        <div>{{item.text}}</div>\r\n      </li>\r\n      <li *ngIf=\"_data.length == 0\">\r\n        <h5>No data available</h5>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`.multiselect-dropdown{position:relative;width:100%}.multiselect-dropdown .dropdown-btn{display:inline-block;border:1px solid #adadad;width:100%;padding:6px 12px;margin-bottom:0;font-size:14px;font-weight:400;line-height:1.52857143;text-align:left;vertical-align:middle;cursor:pointer;background-image:none;border-radius:4px}.multiselect-dropdown .dropdown-btn .selected-item{border:1px solid #337ab7;margin-right:4px;background:#337ab7;padding:0 5px;color:#fff;border-radius:2px;float:left}.multiselect-dropdown .dropdown-btn .selected-item a{text-decoration:none}.multiselect-dropdown .dropdown-btn .selected-item:hover{-webkit-box-shadow:1px 1px #959595;box-shadow:1px 1px #959595}.multiselect-dropdown .dropdown-btn .dropdown-down{display:inline-block;top:10px;width:0;height:0;border-top:10px solid #adadad;border-left:10px solid transparent;border-right:10px solid transparent}.multiselect-dropdown .dropdown-btn .dropdown-up{display:inline-block;width:0;height:0;border-bottom:10px solid #adadad;border-left:10px solid transparent;border-right:10px solid transparent}.multiselect-dropdown .disabled>span{background-color:#eceeef}.dropdown-list{position:absolute;padding-top:6px;width:100%;z-index:9999;border:1px solid #ccc;border-radius:3px;background:#fff;margin-top:10px;-webkit-box-shadow:0 1px 5px #959595;box-shadow:0 1px 5px #959595}.dropdown-list ul{padding:0;list-style:none;overflow:auto;margin:0}.dropdown-list li{padding:6px 10px;cursor:pointer;text-align:left}.dropdown-list .filter-textbox{border-bottom:1px solid #ccc;position:relative;padding:10px}.dropdown-list .filter-textbox input{border:0;width:100%;padding:0 0 0 26px}.dropdown-list .filter-textbox input:focus{outline:0}.multiselect-item-checkbox input[type=checkbox]{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.multiselect-item-checkbox input[type=checkbox]:focus+div:before,.multiselect-item-checkbox input[type=checkbox]:hover+div:before{border-color:#337ab7;background-color:#f2f2f2}.multiselect-item-checkbox input[type=checkbox]:active+div:before{-webkit-transition-duration:0s;transition-duration:0s}.multiselect-item-checkbox input[type=checkbox]+div{position:relative;padding-left:2em;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;margin:0;color:#000}.multiselect-item-checkbox input[type=checkbox]+div:before{-webkit-box-sizing:content-box;box-sizing:content-box;content:'';color:#337ab7;position:absolute;top:50%;left:0;width:14px;height:14px;margin-top:-9px;border:2px solid #337ab7;text-align:center;-webkit-transition:all .4s ease;transition:all .4s ease}.multiselect-item-checkbox input[type=checkbox]+div:after{-webkit-box-sizing:content-box;box-sizing:content-box;content:'';position:absolute;-webkit-transform:scale(0);transform:scale(0);-webkit-transform-origin:50%;transform-origin:50%;-webkit-transition:-webkit-transform .2s ease-out;transition:-webkit-transform .2s ease-out;transition:transform .2s ease-out;transition:transform .2s ease-out,-webkit-transform .2s ease-out;background-color:transparent;top:50%;left:4px;width:8px;height:3px;margin-top:-4px;border-style:solid;border-color:#fff;border-width:0 0 3px 3px;-o-border-image:none;border-image:none;-webkit-transform:rotate(-45deg) scale(0);transform:rotate(-45deg) scale(0)}.multiselect-item-checkbox input[type=checkbox]:disabled+div:before{border-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:disabled:focus+div:before .multiselect-item-checkbox input[type=checkbox]:disabled:hover+div:before{background-color:inherit}.multiselect-item-checkbox input[type=checkbox]:disabled:checked+div:before{background-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:checked+div:after{content:'';-webkit-transition:-webkit-transform .2s ease-out;transition:-webkit-transform .2s ease-out;transition:transform .2s ease-out;transition:transform .2s ease-out,-webkit-transform .2s ease-out;-webkit-transform:rotate(-45deg) scale(1);transform:rotate(-45deg) scale(1)}.multiselect-item-checkbox input[type=checkbox]:checked+div:before{-webkit-animation:.2s ease-in borderscale;animation:.2s ease-in borderscale;background:#337ab7}@-webkit-keyframes borderscale{50%{-webkit-box-shadow:0 0 0 2px #337ab7;box-shadow:0 0 0 2px #337ab7}}@keyframes borderscale{50%{-webkit-box-shadow:0 0 0 2px #337ab7;box-shadow:0 0 0 2px #337ab7}}`],\r\n  providers: [DROPDOWN_CONTROL_VALUE_ACCESSOR],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MultiSelectComponent implements ControlValueAccessor {\r\n  public _settings: DropdownSettings;\r\n  public _data: Array<ListItem> = [];\r\n  public selectedItems: Array<ListItem> = [];\r\n  public isDropdownOpen = false;\r\n  _placeholder: string = 'Select';\r\n  filter: ListItem = new ListItem(this.data);\r\n  defaultSettings: DropdownSettings = {\r\n    singleSelection: false,\r\n    idField: 'id',\r\n    textField: 'text',\r\n    enableCheckAll: true,\r\n    selectAllText: 'Select All',\r\n    unSelectAllText: 'UnSelect All',\r\n    allowSearchFilter: false,\r\n    clearSearchFilter: true,\r\n    maxHeight: 197,\r\n    itemsShowLimit: 999999999999,\r\n    searchPlaceholderText: 'Search',\r\n    closeDropDownOnSelection: false\r\n  };\r\n\r\n  @Input()\r\n  public set placeholder(value: string) {\r\n    if (value) {\r\n      this._placeholder = value;\r\n    } else {\r\n      this._placeholder = 'Select';\r\n    }\r\n  }\r\n  @Input() disabled = false;\r\n\r\n  @Input()\r\n  public set settings(value: DropdownSettings) {\r\n    if (value) {\r\n      this._settings = Object.assign(this.defaultSettings, value);\r\n    } else {\r\n      this._settings = Object.assign(this.defaultSettings);\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  public set data(value: Array<any>) {\r\n    if (!value) {\r\n      this._data = [];\r\n    } else {\r\n      const _items = value.filter((item: any) => {\r\n        if (\r\n          typeof item === 'string' ||\r\n          (typeof item === 'object' && item && item[this._settings.idField] && item[this._settings.textField])\r\n        ) {\r\n          return item;\r\n        }\r\n      });\r\n      this._data = _items.map(\r\n        (item: any) =>\r\n          typeof item === 'string'\r\n            ? new ListItem(item)\r\n            : new ListItem({\r\n                id: item[this._settings.idField],\r\n                text: item[this._settings.textField]\r\n              })\r\n      );\r\n    }\r\n  }\r\n\r\n  @Output('onSelect') onSelect: EventEmitter<ListItem> = new EventEmitter<any>();\r\n\r\n  @Output('onDeSelect') onDeSelect: EventEmitter<ListItem> = new EventEmitter<any>();\r\n\r\n  @Output('onSelectAll') onSelectAll: EventEmitter<Array<ListItem>> = new EventEmitter<Array<any>>();\r\n\r\n  @Output('onDeSelectAll') onDeSelectAll: EventEmitter<Array<ListItem>> = new EventEmitter<Array<any>>();\r\n\r\n  private onTouchedCallback: () => void = noop;\r\n  private onChangeCallback: (_: any) => void = noop;\r\n\r\n  constructor(private cdr: ChangeDetectorRef) {}\r\n\r\n  onItemClick($event: any, item: ListItem) {\r\n    if (this.disabled) {\r\n      return false;\r\n    }\r\n\r\n    const found = this.isSelected(item);\r\n    const limit = this.selectedItems.length < this._settings.limitSelection ? true : false;\r\n\r\n    if (!found) {\r\n      if (this._settings.limitSelection) {\r\n        if (limit) {\r\n          this.addSelected(item);\r\n        }\r\n      } else {\r\n        this.addSelected(item);\r\n      }\r\n    } else {\r\n      this.removeSelected(item);\r\n    }\r\n    if (this._settings.singleSelection && this._settings.closeDropDownOnSelection) {\r\n      this.closeDropdown();\r\n    }\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    if (value !== undefined && value !== null && value.length > 0) {\r\n      if (this._settings.singleSelection) {\r\n        try {\r\n          if (value.length >= 1) {\r\n            const firstItem = value[0];\r\n            this.selectedItems = [\r\n              typeof firstItem === 'string'\r\n                ? new ListItem(firstItem)\r\n                : new ListItem({\r\n                    id: firstItem[this._settings.idField],\r\n                    text: firstItem[this._settings.textField]\r\n                  })\r\n            ];\r\n          }\r\n        } catch (e) {\r\n          // console.error(e.body.msg);\r\n        }\r\n      } else {\r\n        const _data = value.map(\r\n          (item: any) =>\r\n            typeof item === 'string'\r\n              ? new ListItem(item)\r\n              : new ListItem({\r\n                  id: item[this._settings.idField],\r\n                  text: item[this._settings.textField]\r\n                })\r\n        );\r\n        if (this._settings.limitSelection) {\r\n          this.selectedItems = _data.splice(0, this._settings.limitSelection);\r\n        } else {\r\n          this.selectedItems = _data;\r\n        }\r\n      }\r\n    } else {\r\n      this.selectedItems = [];\r\n    }\r\n    this.onChangeCallback(value);\r\n  }\r\n\r\n  // From ControlValueAccessor interface\r\n  registerOnChange(fn: any) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  // From ControlValueAccessor interface\r\n  registerOnTouched(fn: any) {\r\n    this.onTouchedCallback = fn;\r\n  }\r\n\r\n  // Set touched on blur\r\n  @HostListener('blur')\r\n  public onTouched() {\r\n    this.closeDropdown();\r\n    this.onTouchedCallback();\r\n  }\r\n\r\n  trackByFn(index, item) {\r\n    return item.id;\r\n  }\r\n\r\n  isSelected(clickedItem: ListItem) {\r\n    let found = false;\r\n    this.selectedItems.forEach(item => {\r\n      if (clickedItem.id === item.id) {\r\n        found = true;\r\n      }\r\n    });\r\n    return found;\r\n  }\r\n\r\n  isLimitSelectionReached(): boolean {\r\n    return this._settings.limitSelection === this.selectedItems.length;\r\n  }\r\n\r\n  isAllItemsSelected(): boolean {\r\n    return this._data.length === this.selectedItems.length;\r\n  }\r\n\r\n  itemShowRemaining(): Number {\r\n    return this.selectedItems.length - Number(this._settings.itemsShowLimit);\r\n  }\r\n\r\n  addSelected(item: ListItem) {\r\n    if (this._settings.singleSelection) {\r\n      this.selectedItems = [];\r\n      this.selectedItems.push(item);\r\n    } else {\r\n      this.selectedItems.push(item);\r\n    }\r\n    this.onChangeCallback(this.emittedValue(this.selectedItems));\r\n    this.onSelect.emit(this.emittedValue(item));\r\n  }\r\n\r\n  removeSelected(itemSel: ListItem) {\r\n    this.selectedItems.forEach(item => {\r\n      if (itemSel.id === item.id) {\r\n        this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\r\n      }\r\n    });\r\n    this.onChangeCallback(this.emittedValue(this.selectedItems));\r\n    this.onDeSelect.emit(this.emittedValue(itemSel));\r\n  }\r\n\r\n  emittedValue(val: any): any {\r\n    const selected = [];\r\n    if (Array.isArray(val)) {\r\n      val.map(item => {\r\n        if (item.id === item.text) {\r\n          selected.push(item.text);\r\n        } else {\r\n          selected.push(this.objectify(item));\r\n        }\r\n      });\r\n    } else {\r\n      if (val) {\r\n        if (val.id === val.text) {\r\n          return val.text;\r\n        } else {\r\n          return this.objectify(val);\r\n        }\r\n      }\r\n    }\r\n    return selected;\r\n  }\r\n\r\n  objectify(val: ListItem) {\r\n    const obj = {};\r\n    obj[this._settings.idField] = val.id;\r\n    obj[this._settings.textField] = val.text;\r\n    return obj;\r\n  }\r\n\r\n  toggleDropdown(evt) {\r\n    evt.preventDefault();\r\n    if (this.disabled && this._settings.singleSelection) {\r\n      return;\r\n    }\r\n    this.isDropdownOpen = !this.isDropdownOpen;\r\n  }\r\n\r\n  closeDropdown() {\r\n    this.isDropdownOpen = false;\r\n    // clear search text\r\n    if (this._settings.clearSearchFilter) {\r\n      this.filter.text = '';\r\n    }\r\n  }\r\n\r\n  toggleSelectAll() {\r\n    if (this.disabled) {\r\n      return false;\r\n    }\r\n    if (!this.isAllItemsSelected()) {\r\n      this.selectedItems = this._data.slice();\r\n      this.onSelectAll.emit(this.emittedValue(this.selectedItems));\r\n    } else {\r\n      this.selectedItems = [];\r\n      this.onDeSelectAll.emit(this.emittedValue(this.selectedItems));\r\n    }\r\n    this.onChangeCallback(this.emittedValue(this.selectedItems));\r\n  }\r\n}\r\n",
    "import {Directive, ElementRef, Output, EventEmitter, HostListener} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[clickOutside]'\r\n})\r\nexport class ClickOutsideDirective {\r\n    constructor(private _elementRef: ElementRef) {\r\n    }\r\n\r\n    @Output()\r\n    public clickOutside = new EventEmitter<MouseEvent>();\r\n\r\n    @HostListener('document:click', ['$event', '$event.target'])\r\n    public onClick(event: MouseEvent, targetElement: HTMLElement): void {\r\n        if (!targetElement) {\r\n            return;\r\n        }\r\n\r\n        const clickedInside = this._elementRef.nativeElement.contains(targetElement);\r\n        if (!clickedInside) {\r\n            this.clickOutside.emit(event);\r\n        }\r\n    }\r\n}\r\n",
    "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { ListItem } from './multiselect.model';\r\n\r\n@Pipe({\r\n    name: 'ng2ListFilter',\r\n    pure: false\r\n})\r\nexport class ListFilterPipe implements PipeTransform {\r\n    transform(items: ListItem[], filter: ListItem): ListItem[] {\r\n        if (!items || !filter) {\r\n            return items;\r\n        }\r\n        return items.filter((item: ListItem) => this.applyFilter(item, filter));\r\n    }\r\n\r\n    applyFilter(item: ListItem, filter: ListItem): boolean {\r\n        return !(filter.text && item.text && item.text.toLowerCase().indexOf(filter.text.toLowerCase()) === -1);\r\n    }\r\n}\r\n",
    "import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MultiSelectComponent } from './multiselect.component';\r\nimport { ClickOutsideDirective } from './click-outside.directive';\r\nimport { ListFilterPipe } from './list-filter.pipe';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule],\r\n  declarations: [MultiSelectComponent, ClickOutsideDirective, ListFilterPipe],\r\n  exports: [MultiSelectComponent]\r\n})\r\n\r\nexport class NgMultiSelectDropDownModule {\r\n    static forRoot(): ModuleWithProviders {\r\n      return {\r\n        ngModule: NgMultiSelectDropDownModule\r\n      };\r\n    }\r\n}\r\n"
  ],
  "names": [
    "ListItem",
    "source",
    "this",
    "id",
    "text",
    "DROPDOWN_CONTROL_VALUE_ACCESSOR",
    "provide",
    "NG_VALUE_ACCESSOR",
    "useExisting",
    "forwardRef",
    "MultiSelectComponent",
    "multi",
    "noop",
    "cdr",
    "_data",
    "selectedItems",
    "isDropdownOpen",
    "_placeholder",
    "filter",
    "data",
    "defaultSettings",
    "singleSelection",
    "idField",
    "textField",
    "enableCheckAll",
    "selectAllText",
    "unSelectAllText",
    "allowSearchFilter",
    "clearSearchFilter",
    "maxHeight",
    "itemsShowLimit",
    "searchPlaceholderText",
    "closeDropDownOnSelection",
    "disabled",
    "onSelect",
    "EventEmitter",
    "onDeSelect",
    "onSelectAll",
    "onDeSelectAll",
    "onTouchedCallback",
    "onChangeCallback",
    "Object",
    "defineProperty",
    "prototype",
    "set",
    "value",
    "_settings",
    "assign",
    "_this",
    "_items",
    "item",
    "map",
    "onItemClick",
    "$event",
    "found",
    "isSelected",
    "limit",
    "length",
    "limitSelection",
    "removeSelected",
    "addSelected",
    "closeDropdown",
    "writeValue",
    "undefined",
    "firstItem",
    "e",
    "splice",
    "registerOnChange",
    "fn",
    "registerOnTouched",
    "onTouched",
    "trackByFn",
    "index",
    "clickedItem",
    "forEach",
    "isLimitSelectionReached",
    "isAllItemsSelected",
    "itemShowRemaining",
    "Number",
    "push",
    "emittedValue",
    "emit",
    "itemSel",
    "indexOf",
    "val",
    "selected",
    "Array",
    "isArray",
    "objectify",
    "obj",
    "toggleDropdown",
    "evt",
    "preventDefault",
    "toggleSelectAll",
    "slice",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "providers",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "ChangeDetectorRef",
    "placeholder",
    "Input",
    "settings",
    "Output",
    "HostListener",
    "ClickOutsideDirective",
    "_elementRef",
    "clickOutside",
    "onClick",
    "event",
    "targetElement",
    "nativeElement",
    "contains",
    "Directive",
    "ElementRef",
    "ListFilterPipe",
    "transform",
    "items",
    "applyFilter",
    "toLowerCase",
    "Pipe",
    "name",
    "pure",
    "NgMultiSelectDropDownModule",
    "forRoot",
    "ngModule",
    "NgModule",
    "imports",
    "CommonModule",
    "FormsModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
