{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/apis.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpClient,HttpParams } from '@angular/common/http';\r\n\r\nexport interface opportunitiesList {\r\n  earliest_start_date?: string;\r\n  latest_end_date?: string;\r\n  applications_close_date?:string;\r\n}\r\n\r\nexport interface UpdateUser {\r\n  userName: string;\r\n  password?: string;\r\n  otp?: string;\r\n}\r\n\r\nexport interface ChangePwd {\r\n  otp?: string;\r\n  oldPassword?: string;\r\n  newPassword?: string;\r\n  confirmPassword?: string;\r\n}\r\n\r\nexport interface Module {\r\n  moduleId?: number;\r\n  moduleDesc?: string;\r\n  icon?: string;\r\n  displayFnType: boolean;\r\n  types?: FnType[];\r\n}\r\n\r\nexport interface FnType {\r\n  typeId?: number;\r\n  typeDesc?: string;\r\n  functions?: Function[];\r\n}\r\n\r\nexport interface Function {\r\n  functionId?: number;\r\n  functionDesc?: string;\r\n  url?: string;\r\n  visible?: boolean;\r\n  tasks? : number[];\r\n}\r\n\r\n@Injectable()\r\nexport class projApi {\r\n  constructor(private http: HttpClient) { }\r\n  params = new HttpParams().set('access_token', 'dd0df21c8af5d929dff19f74506c4a8153d7acd34306b9761fd4a57cfa1d483c');\r\n\r\n  getOpportunitiesList() {\r\n    return this.http.get('http://gisapi-web-staging-1636833739.eu-west-1.elb.amazonaws.com/v2/opportunities/1624',{params:this.params})\r\n      .map((res) => {\r\n        return res;\r\n      });\r\n  }\r\n\r\n  getAllBackgroundList() {\r\n    return this.http.get('http://gisapi-web-staging-1636833739.eu-west-1.elb.amazonaws.com/v2/lists/backgrounds',{params:this.params})\r\n      .map((res) => {\r\n        return res;\r\n      });\r\n  }\r\n\r\n  getAllSkillList() {\r\n    return this.http.get('http://gisapi-web-staging-1636833739.eu-west-1.elb.amazonaws.com/v2/lists/skills',{params:this.params})\r\n      .map((res) => {\r\n        return res;\r\n      });\r\n  }\r\n\r\n  postOpportunitiesList(opportunitiesList) {\r\n    return this.http.patch('http://gisapi-web-staging-1636833739.eu-west-1.elb.amazonaws.com/v2/opportunities/1624',opportunitiesList,{params:this.params})\r\n      .map((res) => {\r\n        return res;\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\n    <div class=\\\"jumbotron jumbotron-fluid\\\">\\n       <div class=\\\"container\\\">\\n          <h1 class=\\\"display-4\\\">{{opportunitiesList.title}}</h1>\\n          <p class=\\\"lead\\\">{{opportunitiesList.description}}\\n          </p>\\n       </div>\\n    </div>\\n    <div class=\\\"container-fluid\\\">\\n       <div class=\\\"card mt-3\\\">\\n          <div class=\\\"card-body\\\">\\n             <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                   <button type=\\\"button\\\" class=\\\"btn btn-primary float-right\\\" (click)=\\\"staticModal.show()\\\">\\n                   Edit Application\\n                   </button>  \\n                </div>\\n             </div>\\n          </div>\\n       </div>\\n       <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-6\\\">\\n             <div class=\\\"card text-white bg-info mt-3\\\" *ngIf=\\\"opportunitiesList.backgrounds\\\">\\n                <div class=\\\"card-body\\\">\\n                   <h5 class=\\\"card-title\\\">Backgrounds</h5>\\n                   <p *ngFor=\\\"let background of opportunitiesList.backgrounds\\\">{{background.name}}</p>\\n                </div>\\n             </div>\\n             <div class=\\\"card text-white bg-success mt-3\\\" *ngIf=\\\"opportunitiesList.skills\\\">\\n                <div class=\\\"card-body\\\">\\n                   <h5 class=\\\"card-title\\\">Skills</h5>\\n                   <p *ngFor=\\\"let skill of opportunitiesList.skills\\\">{{skill.name}}</p>\\n                </div>\\n             </div>\\n             <div class=\\\"card text-white bg-danger mt-3\\\" *ngIf=\\\"opportunitiesList.languages\\\">\\n                <div class=\\\"card-body\\\">\\n                   <h5 class=\\\"card-title\\\">Languages</h5>\\n                   <p *ngFor=\\\"let language of opportunitiesList.languages\\\">{{language.option}} : {{language.name}}</p>\\n                </div>\\n             </div>\\n          </div>\\n          <div class=\\\"col-sm-6\\\">\\n             <div class=\\\"card-header\\\">\\n                <ul class=\\\"list-group list-group-flush\\\">\\n                   <li class=\\\"list-group-item\\\"><b>Start Date: </b>{{opportunitiesList.earliest_start_date | date: 'dd/MM/yyyy'}}</li>\\n                   <li class=\\\"list-group-item\\\"><b>Latest End Date: </b>{{opportunitiesList.latest_end_date | date: 'dd/MM/yyyy'}}</li>\\n                   <li class=\\\"list-group-item\\\"><b>End Date: </b>{{opportunitiesList.applications_close_date | date: 'dd/MM/yyyy'}}</li>\\n                </ul>\\n             </div>\\n             <div class=\\\"card-header\\\">\\n                <ul class=\\\"list-group list-group-flush\\\">\\n                   <li class=\\\"list-group-item\\\"><b>Selection Process: </b>{{opportunitiesList.role_info.selection_process}}</li>\\n                   <li class=\\\"list-group-item\\\"><b>Salary: </b>{{opportunitiesList.specifics_info.salary}}</li>\\n                   <li class=\\\"list-group-item\\\"><b>City: </b>{{opportunitiesList.role_info.city}}</li>\\n                </ul>\\n             </div>\\n             <div class=\\\"card bg-light mt-3\\\">\\n                <div class=\\\"card-body\\\">\\n                   <h5 class=\\\"card-title\\\">Location</h5>\\n                   <div id=\\\"googleMap\\\" style=\\\"width:600px;height:200px;\\\" ></div>\\n                </div>\\n             </div>\\n          </div>\\n       </div>\\n    </div>\\n </div>\\n <div class=\\\"modal fade\\\" bsModal #staticModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-static-name\\\">\\n <div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n       <div class=\\\"modal-header\\\">\\n          <h4 id=\\\"dialog-static-name\\\" class=\\\"modal-title pull-left\\\">Edit Opportunity Details</h4>\\n          <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n       </div>\\n       <div class=\\\"modal-body\\\">\\n          <div class=\\\"form-group row\\\">\\n             <label for=\\\"title\\\" class=\\\"col-sm-4 col-form-label required\\\">Title</label>\\n             <div class=\\\"col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"opportunitiesList.title\\\" maxlength=\\\"100\\\">\\n             </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n             <label for=\\\"description\\\" class=\\\"col-sm-4 col-form-label required\\\">Description</label>\\n             <div class=\\\"col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"opportunitiesList.description\\\">\\n             </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n             <label for=\\\"selprocess\\\" class=\\\"col-sm-4 col-form-label required\\\">Selection Process</label>\\n             <div class=\\\"col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"selprocess\\\" placeholder=\\\"Selection Process\\\" [(ngModel)]=\\\"opportunitiesList.role_info.selection_process\\\">\\n             </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n             <label for=\\\"salary\\\" class=\\\"col-sm-4 col-form-label required\\\">Salary</label>\\n             <div class=\\\"col-sm-6\\\">\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"salary\\\" placeholder=\\\"Salary\\\" [(ngModel)]=\\\"opportunitiesList.specifics_info.salary\\\">\\n             </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n             <label for=\\\"city\\\" class=\\\"col-sm-4 col-form-label required\\\">City</label>\\n             <div class=\\\"col-sm-6\\\">\\n                <input id=\\\"city\\\" ngx-google-places-autocomplete #placesRef=\\\"ngx-places\\\" (onAddressChange)=\\\"handleAddressChange($event)\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"opportunitiesList.role_info.city\\\"/>\\n             </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n             <label for=\\\"background\\\" class=\\\"col-sm-4 col-form-label required\\\">Background</label>\\n             <div class=\\\"col-sm-6\\\">\\n                <ng-multiselect-dropdown name=\\\"background\\\" [placeholder]=\\\"'Select Background'\\\" [data]=\\\"allbackgroundList\\\" [(ngModel)]=\\\"opportunitiesList.backgrounds\\\" [disabled]=\\\"disabled\\\"\\n                [settings]=\\\"bgdropdownSettings\\\" (onSelect)=\\\"onBackgroundSelect($event)\\\" (onDeSelect)=\\\"onBackgroundDeselect($event)\\\">\\n                </ng-multiselect-dropdown>\\n             </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n             <label for=\\\"background\\\" class=\\\"col-sm-4 col-form-label required\\\">Skills</label>\\n             <div class=\\\"col-sm-6\\\">\\n                <ng-multiselect-dropdown name=\\\"skills\\\" [placeholder]=\\\"'Select Skills'\\\" [data]=\\\"allskillList\\\" [(ngModel)]=\\\"opportunitiesList.skills\\\" [disabled]=\\\"disabled\\\"\\n                [settings]=\\\"skilldropdownSettings\\\">\\n                </ng-multiselect-dropdown>\\n             </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n             <label for=\\\"city\\\" class=\\\"col-sm-4 col-form-label required\\\">Start Date</label>\\n             <div class=\\\"col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" #dp=\\\"bsDatepicker\\\" bsDatepicker [bsValue]=\\\"opportunitiesList.earliest_start_date\\\" (bsValueChange)=\\\"onValueChange($event,'startdate')\\\" placement=\\\"top\\\"\\n                [bsConfig]=\\\"{ dateInputFormat: 'MM/DD/YYYY' }\\\" >\\n             </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n             <label for=\\\"city\\\" class=\\\"col-sm-4 col-form-label required\\\">End Date</label>\\n             <div class=\\\"col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" #dp=\\\"bsDatepicker\\\" bsDatepicker [bsValue]=\\\"opportunitiesList.latest_end_date\\\"  (bsValueChange)=\\\"onValueChange($event,'endDate')\\\" placement=\\\"top\\\"\\n                [bsConfig]=\\\"{ dateInputFormat: 'MM/DD/YYYY' }\\\">\\n             </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n             <label for=\\\"city\\\" class=\\\"col-sm-4 col-form-label required\\\">Close Date</label>\\n             <div class=\\\"col-sm-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" #dp=\\\"bsDatepicker\\\" bsDatepicker  [bsValue]=\\\"opportunitiesList.applications_close_date\\\" (bsValueChange)=\\\"onValueChange($event,'closeDate')\\\" placement=\\\"top\\\"\\n                [bsConfig]=\\\"{ dateInputFormat: 'MM/DD/YYYY' }\\\">\\n             </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6\\\">\\n              <p><span class=\\\"required\\\">Asterisk fields</span>are Mandatory</p>\\n            </div>\\n            <div class= \\\"offset-sm-3 col-sm-3\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary float-left\\\" (click)=\\\"closeModal()\\\">Close</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary float-right\\\" (click)=\\\"submit()\\\" [disabled]=\\\"(!opportunitiesList.title || !opportunitiesList.description  || !opportunitiesList.applications_close_date  || !opportunitiesList.earliest_start_date  || !opportunitiesList.backgrounds.length  || !opportunitiesList.skills.length  || !opportunitiesList.specifics_info.salary\\n                || !opportunitiesList.role_info.city  || !opportunitiesList.role_info.selection_process ||!opportunitiesList.latest_end_date )\\\">Submit</button>\\n            </div>\\n          </div>\\n          \\n       </div>\\n    </div>\\n </div>\\n </div>\"","import { Component, OnInit,TemplateRef,ViewChild  } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BsModalService,ModalDirective } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { GooglePlaceDirective } from \"ngx-google-places-autocomplete\";\nimport {projApi} from './apis';\ndeclare const google: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  opportunitiesList;\n  modalRef: BsModalRef;\n  bsValue = new Date();\n  dropdownList = [];\n  bgdropdownSettings = {};\n  skilldropdownSettings={};\n  allbackgroundList;\n  allskillList;\n  disabled = false;\n  @ViewChild(\"placesRef\") placesRef : GooglePlaceDirective;\n  @ViewChild('staticModal') public staticModal: ModalDirective;\n\n  constructor(private http: HttpClient,\n    private modalService: BsModalService,\n    private api : projApi\n) {\n\n  }\n  ngOnInit() {\n    this.getOpportunitiesList();\n    this.getAllBackgroundList();\n    this.getAllSkillList();\n\n  this.bgdropdownSettings = {\n      singleSelection: false,\n      itemsShowLimit: 3,\n      allowSearchFilter: true,\n      idField: \"id\",\n      textField: \"name\",\n      limitSelection: 3\n  };\n\n  this.skilldropdownSettings = {\n    singleSelection: true,\n    itemsShowLimit: 3,\n    allowSearchFilter: true,\n    idField: \"id\",\n    textField: \"name\"\n};\n  }\n\n  getAllBackgroundList(){\n    this.api.getAllBackgroundList().subscribe(backgroundList => {\n      this.allbackgroundList = backgroundList;\n      //this.allbackgroundList.map(bgList => (bgList.idField = bgList.id, bgList.textField = bgList.name));\n      console.log(this.allbackgroundList);\n    });\n\n  }\n\n  getAllSkillList(){\n    this.api.getAllSkillList().subscribe(skillList => {\n      this.allskillList = skillList;\n    })\n  }\n\n  onBackgroundSelect(value){\n    if (value) {\n      let selectedVal = this.allbackgroundList.find(bgList => (bgList.id === value.id));\n      this.opportunitiesList.backgrounds.push(selectedVal);\n      this.opportunitiesList.backgrounds = this.opportunitiesList.backgrounds.filter(bgList => Object.keys(bgList).length > 2);\n      console.log(this.opportunitiesList.backgrounds);\n    }\n  }\n\n  onBackgroundDeselect(value){\n    if (value) {\n      this.opportunitiesList.backgrounds.filter(bgList => (bgList.id != value.id));\n    }\n  }\ngetOpportunitiesList() {\n\n    this.api.getOpportunitiesList().subscribe(opportunitiesList => {\n     this.opportunitiesList = opportunitiesList;\n     this.opportunitiesList.lat = parseInt(this.opportunitiesList.lat);\n     this.opportunitiesList.lng = parseInt(this.opportunitiesList.lng);\n     this.opportunitiesList.earliest_start_date = new Date(this.opportunitiesList.earliest_start_date);\n     this.opportunitiesList.latest_end_date = new Date(this.opportunitiesList.latest_end_date);\n     this.opportunitiesList.applications_close_date = new Date(this.opportunitiesList.applications_close_date);\n     console.log(this.opportunitiesList);\n     this.loadMap();\n    });\n    \n  }\n\n  loadMap(){\n    var latlng = new google.maps.LatLng(this.opportunitiesList.lat, this.opportunitiesList.lng);\n    let map = new google.maps.Map(document.getElementById('googleMap'), {\n      center: latlng,\n      zoom: 12\n    });\n\n    new google.maps.Marker({\n      position: latlng,\n      map: map\n  });\n  }\n\n  submit(){\n\n    var currentDate = new Date();\n    if (this.opportunitiesList.applications_close_date < currentDate) {\n      alert(\"Close Date should be between 30 to 90 days from current date\");\n      return;\n    }\n    var diff = Math.abs(this.opportunitiesList.applications_close_date.getTime() - currentDate.getTime());\n    var diffDays = Math.ceil(diff / (1000 * 3600 * 24)); \n    if (diffDays >= 30 && diffDays <= 90) {\n\n     this.opportunitiesList.lat = this.opportunitiesList.lat.toString();\n     this.opportunitiesList.lng = this.opportunitiesList.lng.toString();\n     this.opportunitiesList.earliest_start_date = this.opportunitiesList.earliest_start_date.toISOString();\n     this.opportunitiesList.latest_end_date = this.opportunitiesList.latest_end_date.toISOString();\n     this.opportunitiesList.applications_close_date = this.opportunitiesList.applications_close_date.toISOString();\n     //this.allbackgroundList.filter(bgList => ( this.opportunitiesList.backgrounds.map()));\n\n     console.log(this.opportunitiesList);\n      this.staticModal.hide();\n      // post api\n      let postData = {\n        \"opportunity\": {\n          \"title\": this.opportunitiesList.title,\n          \"applications_close_date\": this.opportunitiesList.applications_close_date,\n          \"earliest_start_date\": this.opportunitiesList.earliest_start_date,\n          \"latest_end_date\": this.opportunitiesList.latest_end_date,\n          \"description\": this.opportunitiesList.title,\n          \"backgrounds\": this.opportunitiesList.backgrounds,\n          \"skills\": this.opportunitiesList.skills,\n          \"specifics_info\": {\n            \"salary\": this.opportunitiesList.specifics_info.salary\n          },\n          \"role_info\": {\n            \"city\": this.opportunitiesList.role_info.city,\n            \"selection_process\": this.opportunitiesList.role_info.selection_process\n          }\n        }\n      }\n      this.api.postOpportunitiesList(postData).subscribe(postOpportunitiesList => {\n        this.getOpportunitiesList();\n      })\n    } else {\n      alert(\"Close Date should be between 30 to 90 days from current date\")\n    }\n\n  }\n    \n  handleAddressChange(address) {\n    console.log(address);\n    if (address) {\n      this.opportunitiesList.lat = address.geometry.location.lat();\n      this.opportunitiesList.lng = address.geometry.location.lng();\n      this.opportunitiesList.role_info.city = address.name;\n    }\n    }\n\n  closeModal() {\n    this.staticModal.hide();\n    this.getOpportunitiesList();\n  }\n\n  onValueChange(value: Date,flag): void {\n    if (flag === 'startdate') {\n      this.opportunitiesList.earliest_start_date = value;\n    }\n    if (flag === 'endDate') {\n      this.opportunitiesList.latest_end_date = value;\n    }\n    if (flag === 'closeDate') {\n      this.opportunitiesList.applications_close_date = value;\n    }\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { ButtonsModule,ModalModule,BsDatepickerModule} from 'ngx-bootstrap';\nimport { GooglePlaceModule } from \"ngx-google-places-autocomplete\";\nimport { HttpModule } from '@angular/http';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { FormsModule } from '@angular/forms';\nimport {projApi} from './apis';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ButtonsModule.forRoot(),\n    ModalModule .forRoot(),\n    BsDatepickerModule.forRoot(),\n    NgMultiSelectDropDownModule.forRoot(),\n    HttpClientModule,\n    GooglePlaceModule,\n    HttpModule\n    ],\n  providers: [projApi],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}